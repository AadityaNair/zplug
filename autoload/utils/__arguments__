#!/bin/zsh

__import "core/core"

local    arg
local -a cmds user_cmds

user_cmds=( ${^path}/zplug-*(N-.:t:gs:zplug-:) )

arg="$1"
case "$arg" in
    "")
        __die "[zplug] too few arguments\n"
        return 1
        ;;
esac

# User-defined command
if [[ -n ${(M)user_cmds:#$arg} ]]; then
    eval "$commands[zplug-$arg]"
    return $status
fi

# Auto correct like git(1)
__get_autoload_files \
    "$ZPLUG_ROOT/autoload/commands"
reply+=("${user_cmds[@]}")
cmds=(
${(@f)"$(awk \
    -f "$ZPLUG_ROOT/src/share/fuzzy.awk" \
    -v search_string="$arg" \
    <<<"${(F)reply:gs:_:}"
)"}
)

case $#cmds in
    0)
        __die "[zplug] $arg: no such command\n"
        return 1
        ;;
    1)
        __die "[zplug] WARNING: You called a Git command named '%s', which does not exist.\n" "$arg"
        __die "[zplug] Continuing under the assumption that you meant '%s'\n" "$cmds"
        zplug "$cmds"
        return $status
        ;;
    *)
        __die "[zplug] '%s' is not a zplug command. See 'zplug help'.\n" "$arg"
        __die "[zplug] Did you mean one of these?\n"
        __die "[zplug]        %s\n" ${cmds}
        return 1
        ;;
esac
