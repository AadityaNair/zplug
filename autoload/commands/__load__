#!/bin/zsh

# Check if cache is up-to-date
if __zplug::core::cache::loadable; then
    echo "zplug: load from cache"
    __zplug::core::load::cache
    return $status
fi

local repo
local -a repos
local is_verbose=false
local arg
local -A tags

repos=(
    "${(k)zplugs[@]}"
)

while (( $# > 0 ))
do
    arg="$1"
    case "$arg" in
        --verbose)
            is_verbose=true
            ;;
        -*|--*)
            __zplug::core::options::unknown "$arg"
            return $status
            ;;
        "")
            # Invalid
            return 1
            ;;
        */*)
            repos+=( "${arg:gs:@::}" )
            ;;
        *)
            return 1
            ;;
    esac
    shift
done

if [[ -f $ZPLUG_CACHE_FILE ]]; then
    rm -rf "$ZPLUG_CACHE_FILE"
fi
mkdir -p "$ZPLUG_CACHE_FILE"
rm -f "$_zplug_cache[before_plugin]"
rm -f "$_zplug_cache[after_plugin]"
rm -f "$_zplug_cache[plugin]"
rm -f "$_zplug_cache[lazy_plugin]"
rm -f "$_zplug_cache[theme]"
rm -f "$_zplug_cache[command]"
rm -f "$_zplug_cache[fpath]"
rm -f "$_zplug_cache[hook-load]"
touch "$_zplug_cache[before_plugin]"
touch "$_zplug_cache[after_plugin]"
touch "$_zplug_cache[plugin]"
touch "$_zplug_cache[lazy_plugin]"
touch "$_zplug_cache[theme]"
touch "$_zplug_cache[command]"
touch "$_zplug_cache[fpath]"
touch "$_zplug_cache[hook-load]"

local -F SECONDS
set +m
for repo in "$repos[@]"
do
    # Generate cache for each as:type in parallel
    {
        __zplug::core::tags::parse "$repo"
        tags[as]="$(__zplug::core::core::run_interfaces 'as' "$repo")"

        case "$tags[as]" in
            "plugin")
                __zplug::core::cache::plugins "$repo"
                ;;
            "command")
                __zplug::core::cache::commands "$repo"
                ;;
            "theme")
                __zplug::core::cache::themes "$repo"
                ;;
            *)
                __zplug::io::print::f \
                    --die \
                    --zplug \
                    --func \
                    "as tag is invalid value (%s)\n" \
                    "$fg[green]$repo$reset_color"
                return 1
                ;;
        esac
        #echo "$repo ($SECONDS) - $tags[as]"
    } &
done
wait

# Load packages from cache
__zplug::core::load::cache --verbose
return $status
