#!/bin/zsh

__import "print/print"
__import "zplug/cache"

local    is_verbose=false is_debug=false
local    loaded_omz=false
local    arg key k
local -A zspec
local    f ext
local    basename
local    src dst
local -a src_a
local    ignore
local -A load_commands
local -a load_plugins load_fpaths lazy_plugins
local -a load_ignores
local -a temporary_array
local -a themes_ext plugins_ext glob_patterns
local -a args unsorted_nice nice_plugins

while (( $# > 0 ))
do
    arg="$1"
    case "$arg" in
        --verbose)
            shift; is_verbose=true
            ;;
        --debug)
            shift; is_debug=true
            ;;
        -*|--*)
            __die "$arg: Unknown option\n"
            return 1
            ;;
    esac
done

# Use cache file
if __load_cache; then
    if $is_debug; then
        __put "$_ZPLUG_CACHE_FILE\n"
    fi
    return 0
fi

args=(${(k)zplugs})

# Order by nice value
for key in ${args[@]}
do
    zspec=( ${(@f)"$(__parser__ "$key")"} )
    unsorted_nice+=("$zspec[nice]:$zspec[name]")
done

for key in ${${(OnM)unsorted_nice:#-*}#*:} ${${(on)unsorted_nice:#-*}#*:}
do
    zspec=( ${(@f)"$(__parser__ "$key")"} )
    for k in ${(k)zspec}
    do
        if [[ $zspec[$k] == "-EMP-" ]]; then
            zspec[$k]=""
        fi
    done

    {   # Skip cases
        if [[ $zspec[from] == "oh-my-zsh" ]]; then
            # Check parent directory thus oh-my-zsh root dir
            [[ -d ${zspec[dir]:h} ]] || continue
        else
            # Use -e flag bacause zspec[dir] returns directory and file
            [[ -e $zspec[dir] ]] || continue
        fi
        if [[ -n $zspec[if] ]]; then
            if ! eval "$zspec[if]" >/dev/null 2>&1; then
                $is_verbose && __die "$zspec[name]: (not loaded)\n"
                continue
            fi
        fi
        if [[ -n $zspec[on] ]]; then
            if [[ $zspec[from] != "local" && ! -e $ZPLUG_HOME/repos/${~zspec[on]} ]] ||
                [[ $zspec[from] == "local" && ! -e ${~zspec[on]} ]]; then
            $is_verbose && __die "$zspec[name]: (not loaded)\n"
            continue
        fi; fi
    }

    basename="${zspec[name]:t}"

    case $zspec[as] in
        "command")
            [[ -d $ZPLUG_HOME/bin ]] || mkdir -p $ZPLUG_HOME/bin
            # Add parent directories to fpath if any files starting in _* exist
            load_fpaths+=(${zspec[dir]}{_*,/**/_*}(N-.:h))
            dst=${${zspec[rename_to]:+$ZPLUG_HOME/bin/$zspec[rename_to]}:-$ZPLUG_HOME/bin}

            zspec[dir]=${zspec[dir]%/}
            if [[ -f $zspec[dir]${zspec[use]:+"/$zspec[use]"} ]]; then
                load_commands+=($zspec[dir]${zspec[use]:+"/$zspec[use]"} $dst)
            elif [[ -f $zspec[dir]${zspec[use]:+"/$zspec[use]"}/$basename ]]; then
                load_commands+=($zspec[dir]${zspec[use]:+"/$zspec[use]"}/$basename $dst)
            elif [[ -f $zspec[dir]/$basename ]]; then
                load_commands+=($zspec[dir]/$basename $dst)
            elif [[ -f $zspec[dir] ]]; then
                load_commands+=($zspec[dir] $dst)
            else
                # For brace
                src_a=( $(zsh -c "echo ${zspec[dir]}/${zspec[use]:-"*(*N.)"}" 2>/dev/null) )
                for src in $src_a
                do
                    load_commands+=($src $dst)
                done
            fi
            ;;

        "plugin")
            if [[ $zspec[from] == "oh-my-zsh" ]]; then
                load_omz() {
                    if ! $loaded_omz; then
                        loaded_omz=true
                        export ZSH=$ZPLUG_HOME/repos/$_ZPLUG_OHMYZSH
                        # Insert to the top
                        load_plugins=($ZSH/oh-my-zsh.sh ${load_plugins[@]})
                    fi
                }

                # oh-my-zsh
                case $zspec[name] in
                    plugins/*)
                        load_fpaths+=(${zspec[dir]}/{_*,**/_*}(N-.:h))
                        temporary_array=( $zspec[dir]/${~zspec[use]:-"*.plugin.zsh(-.N)"} )
                        if (( $zspec[nice] > 9 )); then
                            nice_plugins+=( ${temporary_array[@]} )
                        else
                            load_plugins+=( ${temporary_array[@]} )
                        fi
                        (( $#temporary_array > 0 )) && load_omz
                        ;;
                    themes/*)
                        load_fpaths+=(${zspec[dir]}/{_*,**/_*}(N-.:h))
                        themes_ext=(.zsh-theme .theme-zsh)
                        temporary_array=( ${zspec[dir]}${zspec[use]:-${^themes_ext}(-.N)} )
                        if (( $zspec[nice] > 9 )); then
                            nice_plugins+=( ${temporary_array[@]} )
                        else
                            load_plugins+=( ${temporary_array[@]} )
                        fi
                        (( $#temporary_array > 0 )) && load_omz
                        ;;
                    lib/*)
                        load_fpaths+=(${zspec[dir]}/{_*,**/_*}(N-.:h))
                        temporary_array=( $zspec[dir]${~zspec[use]:-".zsh(-.N)"} )
                        if (( $zspec[nice] > 9 )); then
                            nice_plugins+=( ${temporary_array[@]} )
                        else
                            load_plugins+=( ${temporary_array[@]} )
                        fi
                        (( $#temporary_array > 0 )) && load_omz
                        ;;
                esac

            else
                # NOT oh-my-zsh
                plugins_ext=(plugin.zsh zsh zsh-theme)
                for ext in ${plugins_ext[@]}
                do
                    glob_patterns=()
                    if [[ -n $zspec[use] ]]; then
                        glob_patterns+=( $zspec[dir]/${~zspec[use]}(-.N) )
                        if (( $#glob_patterns == 0 )); then
                            glob_patterns+=( $zspec[dir]/${~zspec[use]}.$ext(-.N) )
                            glob_patterns+=( $(zsh -c "echo ${zspec[dir]}/${zspec[use]:-"*(*N.)"}" 2>/dev/null) )
                        fi
                    else
                        if (( $zspec[lazy] == 1 )); then
                            glob_patterns+=( $zspec[dir]/autoload/*(N-.) )
                        else
                            glob_patterns+=( $zspec[dir]/*.$ext(-.N) )
                            glob_patterns+=( $zspec[dir].$ext(-.N) )
                        fi
                    fi
                    if (( $#glob_patterns > 0 )); then
                        break
                    fi
                done

                # Add files to fpath
                load_fpaths+=(${zspec[dir]}/_*(N-.:h))

                if (( $zspec[nice] > 9 )); then
                    nice_plugins+=(${glob_patterns[@]})
                else
                    if (( $zspec[lazy] == 1 )); then
                        lazy_plugins+=(${glob_patterns[@]})
                        load_fpaths+=($zspec[dir])
                        load_fpaths+=(${lazy_plugins[@]:h})
                    else
                        load_plugins+=(${glob_patterns[@]})
                    fi
                fi
            fi
            ;;

        *)
            __die "$zspec[as]: as tag must be command or plugin\n"
            return 1
            ;;
    esac

    if [[ -n $zspec[ignore] ]]; then
        if [[ $zspec[from] == "oh-my-zsh" ]]; then
            load_ignores=( $ZPLUG_HOME/repos/$_ZPLUG_OHMYZSH/${~zspec[ignore]}(N) )
        else
            load_ignores=( $zspec[dir]/${~zspec[ignore]}(N) )
        fi

        for ignore in ${load_ignores[@]}
        do
            # Commands
            if [[ -n $load_commands[(i)$ignore] ]]; then
                unset "load_commands[$ignore]"
            fi
            # Plugins
            load_plugins=(${load_plugins#$ignore})
            nice_plugins=(${nice_plugins#$ignore})
            # fpath
            load_fpaths=(${load_fpaths#$ignore})
        done
    fi
done

# Commands
{
    for f in ${(k)load_commands}
    do
        [[ -f $f ]] && ln -snf "$f" "$load_commands[$f]"
    done
    path=("$ZPLUG_HOME/bin" $path)
    typeset -gx -U path
}

# Plugins
{
    for f in ${load_plugins[@]}
    do
        if [[ -f $f ]]; then
            if $is_debug; then
                echo "$f"
            else
                source "$f"
                if [[ $status -eq 0 ]] && $is_verbose; then
                    __put "$fg[green]  Loaded$reset_color ${f/$ZPLUG_HOME\/repos\//}\n"
                fi
            fi
        fi
    done

    # NOTE: set fpath before compinit
    if $is_debug; then
        echo ${(F)${(u)load_fpaths}}
    else
        fpath=(${(u)load_fpaths} $fpath)
        compinit -C -d "$ZPLUG_HOME/zcompdump"
    fi

    for f in ${nice_plugins[@]}
    do
        if [[ -f $f ]]; then
            if $is_debug; then
                echo "$f"
            else
                source "$f"
                if [[ $status -eq 0 ]] && $is_verbose; then
                    __put "$fg[green]  Loaded$reset_color ${f/$ZPLUG_HOME\/repos\//}"
                    __put "$fg[yellow] after compinit$reset_color\n"
                fi
            fi
        fi
    done
}

# Plugins (Lazy)
{
    for f in ${lazy_plugins}
    do
        autoload -Uz "${f:t}"
    done
}

# Cache
__update_cache
