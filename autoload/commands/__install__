#!/usr/bin/env zsh
# Description:
#   Install packages in parallel

local     is_parallel=""
local     repo arg
local -A  repo_pids proc_states hook_build hook_finished hook_pids status_codes repo_dir
local -A  tags
local -F  SECONDS=0
local -aU repos
local -i  queue_max=$ZPLUG_THREADS
local -i  spinner_idx subspinner_idx
local -i  status_code=0
local -i  timeout=60

while (( $# > 0 ))
do
    arg="$1"
    case "$arg" in
        -*|--*)
            __zplug::core::options::unknown "$arg"
            return $status
            ;;
        "")
            # Invalid
            return 1
            ;;
        */*)
            repos+=( "${arg:gs:@::}" )
            ;;
        *)
            return 1
            ;;
    esac
    shift
done

if ! __zplug::core::share::init_parallel "$repos[@]"; then
    # Since the initialization has failed, this command is terminated.
    # The error message etc. should be done within that function.
    return 1
fi
repos=( "$reply[@]" )

for repo in "$repos[@]"
do
    tags[dir]="$(__zplug::core::core::run_interfaces 'dir' "$repo")"
    tags[from]="$(__zplug::core::core::run_interfaces 'from' "$repo")"
    tags[hook-build]="$(__zplug::core::core::run_interfaces 'hook-build' "$repo")"

    # Run the installation in background
    {
        if [[ -n $tags[if] ]]; then
            status_code=$_zplug_status[skip_if]
        else
            # Run 'install' handler
            if __zplug::core::sources::is_handler_defined "install" "$tags[from]"; then
                __zplug::core::sources::use_handler \
                    "install" \
                    "$tags[from]" \
                    "$repo"
                status_code=$status
            fi
        fi

        # Manage the status codes in a file
        # to lock the file in order to write asynchronously
        __zplug::job::handle::flock \
            "$_zplug_config[install_status]" \
            "repo:$repo\tstatus:$status_code"
    } &

    repo_pids[$repo]=$!
    repo_dir[$repo]="$tags[dir]"
    hook_build[$repo]="$tags[hook-build]"
    hook_finished[$repo]=false
    proc_states[$repo]="created"
    status_codes[$repo]=""

    __zplug::job::handle::wait
done

__zplug::core::share::elapsed_time $SECONDS
__zplug::core::share::finalize_parallel
