#!/bin/zsh

die() {
    echo "$@" >&2
}

# Disable job control
set +m

ZPLUG_NAME=zplug
ZPLUG_VERSION=0.0.1
ZPLUG_HOME=~/zplug
typeset -g -A zplugs

bg_rotation_bar() {
    local current_count simbol
    for ((current_count=0; ; current_count++))
    do
        let simbol=current_count%4
        case "$simbol" in
            0) echo -ne " |\r";;
            1) echo -ne " /\r";;
            2) echo -ne " -\r";;
            3) echo -ne " \\\\\r";;
        esac
        sleep 0.05s
    done
}

zplug::install()
{
    # prepare
    local cnt line fail job
    cnt=0
    [[ -d $ZPLUG_HOME ]] || mkdir -p $ZPLUG_HOME
    [[ $1 ]] || return

    for line in "$@"; do
        {
            SECONDS=0
            printf "Installing...  $line\n"
            bg_rotation_bar & bg_pid=$!
            cd $ZPLUG_HOME

            local -A zspec
            zspec=( $(zplug::parser $line) )
            if [[ $zspec[from] == "gh-r" ]]; then
                eval 'L=$zspec[name] bash -c "$(curl -L git.io/releases)" -s os' >/dev/null 2>&1
                ret=$status
            else
                git clone \
                    --depth=1 \
                    --recursive \
                    --quiet \
                    git@github.com:"$line" >/dev/null 2>&1
                ret=$status
            fi
            kill -9 $bg_pid
            if [ $ret -eq 0 ]; then
                printf "\e[32mInstalled!\e[m     $line \t ($SECONDS sec.)\n"
            else
                printf "\e[31mNot Installed\e[m  $line\n"
                false
            fi
        } &
        (( (cnt += 1) % 16 == 0 )) && wait
    done

    fail=0
    typeset -F SECONDS=0

    # wait
    for job in ${${(v)jobstates##*:*:}%=*}
    do
        wait $job || let "fail+=1"
    done
    wait

    if [[ "$fail" -eq 0 ]]; then
        printf "\e[;1m ==> Installed all plugins to $ZPLUG_HOME, successfully!\e[m\n"
    else
        printf "\e[31;1m ==> Installed to $ZPLUG_HOME but failed.\e[m\n"
    fi
    printf "$ZPLUG_NAME: total time %.2f sec\n" $SECONDS
}

zplug::parser()
{
    local zplug split_array
    zplug="$1"
    zplug="${zplug},${zplugs[$zplug]%,}"

    split_array=(${(s:,:)zplug})

    local name as of to from _if dir
    name="${split_array[1]}"
    as=${${${(M)split_array:#as*}#*:}:--EMP-}
    of=${${${(M)split_array:#of*}#*:}:--EMP-}
    to=${${${(M)split_array:#to*}#*:}:--EMP-}
    from=${${${(M)split_array:#from*}#*:}:--EMP-}
    _if=${${${(M)split_array:#if*}#*:}:--EMP-}
    dir=${${${(M)split_array:#dir*}#*:}:--EMP-}

    local -A zplugs_parsed
    zplugs_parsed=(name "$name" as "$as" of "$of" to "$to" from "$from" if "$_if" dir "$dir")

    echo "${(kv)zplugs_parsed}"
}

zplug::load()
{
    local load_path

    local -A zspec
    local zplug
    for zplug in ${(k)zplugs}
    do
        zspec=( $(zplug::parser $zplug) )

        if [[ $zspec[if] != "-EMP-" ]]; then
            if ! eval "$zspec[if] >/dev/null 2>&1"; then
                echo "$zspec[name]: not load"
                continue
            fi
        fi

        case $zspec[as] in
            bin|cmd)
                load_path="$zspec[dir]"
                if [[ $zspec[of] ]]; then
                    if [[ -d $zspec[dir]/$zspec[of] ]]; then
                        load_path="$zspec[dir]/$zspec[of]"
                    else
                        load_path="$zspec[dir]/${${zspec[of]}%/*}"
                    fi
                fi
                export PATH="$load_path:$PATH"
                ;;
            src|"")
                local f files
                files=($zspec[dir]/*.zsh(N))
                for f in $files
                do
                    source "$f"
                done
                ;;
        esac
    done
}

zplug() {
    local zplug
    zplug="$1"
    case "$zplug" in
        i|install)
            zplug::install ${(k)zplugs}
            return $status
            ;;
        l|load)
            zplug::load
            return $status
            ;;
        "")
            return 1
            ;;
        *)
            shift
            if [[ $zplug =~ ^[A-Za-z0-9._-]+/[A-Za-z0-9._-]+,?$ ]]; then
                local i specifier
                for i in "$@"
                do
                    case "${i%:*}" in
                        as|of|from|to|if|dir)
                            specifier="${specifier}${i}"
                            ;;
                        *)
                            die "$i: invalid specifier"
                            return 1
                            ;;
                    esac
                done
                # trim last comma
                zplug=${zplug%,}
                specifier=${specifier%,}

                zplugs+=($zplug "${specifier:-}")
                zplugs[$zplug]+="${zplugs[$zplug]:+,}dir:$ZPLUG_HOME/${zplug#*/}"
            fi
            ;;
    esac
}

zplug "b4b4r07/http_code", \
    as:cmd, \
    of:bin/http_code
zplug "b4b4r07/gotcha"
zplug "junegunn/fzf-bin" as:bin, from:gh-r
# zplug "stedolan/jq" \
#     as:bin, \
#     from:gh-r \
#     | zplug "b4b4r07/enhancd"

zplug install
zplug load
