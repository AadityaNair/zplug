#!/bin/zsh
# **DESIGN**
# zplug install
# zplug "username/reponame"
# zplug "username/reponame" as:bin
# zplug "username/reponame" of:'*.zsh'
# zplug "username/reponame" to:~/dir
#
# zplug "b4b4r07/gomi" -> plugs=(b4b4r07-SLASH-gomi), b4b4r07-SLASH-gomi[as]="bin", b4b4r07-SLASH-gomi[load]='*.sh'


ZPLUG_HOME=~/plug

typeset -g -A plugs

bg_rotation_bar() {
    local current_count simbol
    for ((current_count=0; ; current_count++))
    do
        let simbol=current_count%4
        case "$simbol" in
            0) echo -ne " |\r";;
            1) echo -ne " /\r";;
            2) echo -ne " -\r";;
            3) echo -ne " \\\\\r";;
        esac
        sleep 0.005s
    done
}

plug::install() {
    # prepare
    local cnt line fail job
    cnt=0
    fail=0
    [[ -d $ZPLUG_HOME ]] || mkdir -p $ZPLUG_HOME

    for line in "$@"; do
        {
            printf "Installing... $line\n"
            bg_rotation_bar & bg_pid=$!
            cd $ZPLUG_HOME
            git clone \
                --depth=1 \
                --recursive \
                --quiet \
                https://github.com/"$line" >/dev/null 2>&1
            ret=$status
            kill -9 $bg_pid
            if [ $ret -eq 0 ]; then
                printf "\e[32mInstalled!\e[m    $line \t ($SECONDS sec.)\n"
            else
                printf "\e[31mInstalled!\e[m    $line\n"
                false
            fi
        } &
        (( (cnt += 1) % 16 == 0 )) && wait
    done

    typeset -F SECONDS=0

    # wait
    for job in ${${(v)jobstates##*:*:}%=*}
    do
        wait $job || let "fail+=1"
    done
    wait

    if [[ "$fail" == "0" ]]; then
        printf "\e[;1m ==> Installed all plugins to ~/hogehoge, successfully\e[m\n"
    else
        printf "\e[31;1m ==> Install to ~/hogehoge, baaad!\e[m\n"
    fi
    printf "zplug install: total time %.2f sec\n" $SECONDS
}

plug() {
    local plug
    plug="$1"
    case "$plug" in
        install)
            plug::install ${(k)plugs}
            return $?
            ;;
        *)
            shift
            if [[ $plug =~ ^[A-Za-z0-9._-]+/[A-Za-z0-9._-]+$ ]]; then
                plugs+=($plug "${@:-}")
            fi
            ;;
    esac
}

plug "b4b4r07/vim-shellutils"
plug "b4b4r07/vim-autocdls"
plug "b4b4r07/vim-ezoe"
plug "b4b4r07/ezoe"
plug "b4b4r07/vim-hcl"
plug "b4b4r07/gotcha" "as:bin load:*.sh"
plug "b4b4r07/gomi"
plug "b4b4r07/gch"
plug "b4b4r07/solarized.vim" "as:src"
plug "b4b4r07/releases"
plug "b4b4r07/misc"
plug install
exit

typeset -p plugs

plug_parse() {
    local attr i
    attr=(${(s: :)1})

    for i in $attr
    do
        echo ${(s/:/)i}
    done
}
plug_parse $plugs[b4b4r07/gotcha]
